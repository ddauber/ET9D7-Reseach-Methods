[["comparing-groups.html", "10 Comparing groups 10.1 Comparing two groups 10.2 Comparing more than two groups 10.3 A cheatsheet to guide your own group comparisons", " 10 Comparing groups ## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ── ## ✓ ggplot2 3.3.5 ✓ purrr 0.3.4 ## ✓ tibble 3.1.3 ✓ dplyr 1.0.7 ## ✓ tidyr 1.1.3 ✓ stringr 1.4.0 ## ✓ readr 2.0.1 ✓ forcats 0.5.1 ## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() ## Rows: 69578 Columns: 6 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: &quot;,&quot; ## chr (3): country, gender, relationship_status ## dbl (3): age, freedom_of_choice, satisfaction ## ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. Social Sciences is about the study of human beings and their interactions. As such, we frequently want to compare two or more groups of human beings, organisations, teams, countries, etc., with each other to see whether they are similar or different from each other. Sometimes we also want to track individuals over time and see how they may have changed in some way or other. In short, comparing groups is an essential technique to make inferences and helps us better understand the diversity that surrounds us. If we want to perform a group comparison we have to consider which technique is most appropriate for the data we have. Some of it might be related to the type of data we have collected, other aspects might be linked to the distribution of the data. More specifically, before we apply any statistical technique we have to consider at least the following: missing data (see Chapter 7.6), outliers (see Chapter 8.3.3, and the assumptions made by analytical techniques about our data While we covered missing data and outliers in previous chapters, we have yet to discuss assumptions. For group comparisons there are three questions we need to answer: Is my data parametric or non-parametric? (see Chapter 9.1) How many groups do I wish to compare? Are these groups paired or unpaired? In the following we will look at group comparisons for parametric and non-parametric data in each category and use the wvs_nona dataset, i.e. the wvs dataframe after we performed imputation (see also Chapter 7.6.3). Since we already covered how to test whether data is parametric or non-parametric we will forgo this step out of pure convenience and to remain succinct. We also ignore any potential outliers or missing data. The case studies at the end of the book provide realistic examples of how to perform groups comparisons with a new set of data (see Chapter @ref()). Thus, parametric and non-parametric tests will be demonstrated with the same dataset and the same variables. 10.1 Comparing two groups The simplest of comparisons is the one where you only have two groups. In our case, we are interested in whether participants perceive freedom_of_choice in the same way across different genders and across different countries. 10.1.1 Two Unpaired groups An unpaired group test assumes that the observations in each group are not related to each other, for example that the participants in each group are different individuals. Our first comparison will be participants from Egypt and we want to understand whether male and female citizens in this country perceive that they have freedom_of_choice. We first can compare these two groups using our trusty geom_boxplot (or any variation of it). # Only select participants from &#39;Egypt&#39; comp &lt;- wvs_nona %&gt;% filter(country == &quot;Egypt&quot;) # Compute the mean for each group group_means &lt;- comp %&gt;% group_by(gender) %&gt;% summarise(g_mean = mean(freedom_of_choice)) # Create our data visualisation comp %&gt;% ggplot(aes(x = gender, y = freedom_of_choice, fill = gender)) + geom_boxplot() + # Add the mean for each group geom_point(data = group_means, aes(x = gender, y = g_mean), shape = 3, size = 2 ) While the distribution looks similar, we can notice that the median and the mean (marked by the cross inside the boxplot) are slighter higher for male participants. Thus, we could can suspect slight differences between these two groups, but we do not know whether these differences are significant or not. To consider the significance (remember Chapter 9.3) and the effect size (see Table ??) we have to perform statistical tests. Table 10.1 summarises the different tests and functions to perform the group comparison computationally. It is important to note that the parametric test compares the means of two groups, while the non-parametric test compares ranks, especially the median. All tests turn significant if the differences between groups is large enough. Thus, significant results can be read as ‘these groups are significantly different from each other.’ Of course, if the difference is not significant, the groups are considered to be not different from each other. Table 10.1: Comparing two unpaired groups (effect size functions from package effectsize Assumption Test Function for test Effect size Function for effect size Parametric T-Test t.test() Cohen’s d cohens_d() Non-parametric Mann-Whitney U wilcox.test() Rank biserial r rank_biserial() # PARAMETRIC COMPARISON ## Perform the comparison (gcomp &lt;- t.test(freedom_of_choice ~ gender, data = comp)) ## ## Welch Two Sample t-test ## ## data: freedom_of_choice by gender ## t = -4.7563, df = 1193.2, p-value = 2.212e-06 ## alternative hypothesis: true difference in means between group female and group male is not equal to 0 ## 95 percent confidence interval: ## -0.8645067 -0.3595762 ## sample estimates: ## mean in group female mean in group male ## 6.212435 6.824477 ## Determine the effect size (d &lt;- cohens_d(freedom_of_choice ~ gender, data = comp)) ## Cohen&#39;s d | 95% CI ## -------------------------- ## -0.27 | [-0.39, -0.16] ## ## - Estimated using pooled SD. ## Interpret the effect size interpret_d(d$Cohens_d) ## [1] &quot;small&quot; ## (Rules: cohen1988) # NON-PARAMETRIC COMPARISON ## Perform the comparison (gcomp &lt;- wilcox.test(freedom_of_choice ~ gender, data = comp)) ## ## Wilcoxon rank sum test with continuity correction ## ## data: freedom_of_choice by gender ## W = 149938, p-value = 4.967e-07 ## alternative hypothesis: true location shift is not equal to 0 ## Determine the effect size via rank biserial correlation (d &lt;- rank_biserial(freedom_of_choice ~ gender, data = comp)) ## r (rank biserial) | 95% CI ## ---------------------------------- ## -0.17 | [-0.23, -0.10] ## Interpret the effect size interpret_rank_biserial(d$r_rank_biserial, rules = &quot;cohen1988&quot;) ## [1] &quot;small&quot; ## (Rules: cohen1988) 10.1.2 Two Paired groups Paired sample test: use in longitudinal studies used in experimental studies (pre-test vs post-test) Table 10.1: Comparing two unpaired groups (effect size functions from package effectsize Assumption Test Function for test Effect size Function for effect size Parametric T-Test t.test(paired = TRUE) Cohen’s d cohens_d() Non-parametric Wilcoxon Signed Rank Test wilcox.test(paired = TRUE) Rank biserial r rank_biserial() We want to know whether their earlier movies have been significantly more successful than others. We use the data frame dir_mov which only contains movies of directors who have two or more movies listen in the IMDb Top 250s. dir_mov %&gt;% ggplot(aes(x = movie, y = imdb_rating)) + geom_boxplot() # PARAMETRIC COMPARISON ## Perform the comparison (gcomp &lt;- t.test(imdb_rating ~ movie, data = dir_mov, paired = TRUE)) ## ## Paired t-test ## ## data: imdb_rating by movie ## t = 0.87171, df = 42, p-value = 0.3883 ## alternative hypothesis: true difference in means is not equal to 0 ## 95 percent confidence interval: ## -0.05504967 0.13877060 ## sample estimates: ## mean of the differences ## 0.04186047 ## Determine the effect size (d &lt;- cohens_d(imdb_rating ~ movie, data = dir_mov)) ## Cohen&#39;s d | 95% CI ## ------------------------- ## 0.16 | [-0.26, 0.58] ## ## - Estimated using pooled SD. ## Interpret the effect size interpret_d(d$Cohens_d) ## [1] &quot;very small&quot; ## (Rules: cohen1988) # NON-PARAMETRIC COMPARISON ## Perform the comparison (gcomp &lt;- wilcox.test(imdb_rating ~ movie, data = dir_mov, paired = TRUE)) ## ## Wilcoxon signed rank test with continuity correction ## ## data: imdb_rating by movie ## V = 278, p-value = 0.5622 ## alternative hypothesis: true location shift is not equal to 0 ## Determine the effect size via rank biserial correlation (d &lt;- rank_biserial(imdb_rating ~ movie, data = dir_mov)) ## r (rank biserial) | 95% CI ## --------------------------------- ## 0.04 | [-0.20, 0.28] ## Interpret the effect size interpret_rank_biserial(d$r_rank_biserial, rules = &quot;cohen1988&quot;) ## [1] &quot;very small&quot; ## (Rules: cohen1988) 10.2 Comparing more than two groups anova() kruskal.test() 10.3 A cheatsheet to guide your own group comparisons To summarise what we have covered in this section, we can consider "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
