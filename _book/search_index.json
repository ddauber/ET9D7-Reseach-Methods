[["correlations.html", "9 Correlations 9.1 Plotting correlations 9.2 Simpson’s Paradox: The limitations of correlations", " 9 Correlations library(tidyverse) ## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ── ## ✓ ggplot2 3.3.5 ✓ purrr 0.3.4 ## ✓ tibble 3.1.3 ✓ dplyr 1.0.7 ## ✓ tidyr 1.1.3 ✓ stringr 1.4.0 ## ✓ readr 2.0.0 ✓ forcats 0.5.1 ## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() library(r4np) library(correlation) ## Registered S3 methods overwritten by &#39;parameters&#39;: ## method from ## as.double.parameters_kurtosis datawizard ## as.double.parameters_skewness datawizard ## as.double.parameters_smoothness datawizard ## as.numeric.parameters_kurtosis datawizard ## as.numeric.parameters_skewness datawizard ## as.numeric.parameters_smoothness datawizard ## print.parameters_distribution datawizard ## print.parameters_kurtosis datawizard ## print.parameters_skewness datawizard ## summary.parameters_kurtosis datawizard ## summary.parameters_skewness datawizard library(patchwork) Sometimes counting and measuring means, medians and standard deviations is not enough, because they are all based on a single variable. Instead, we might have questions related to the relationship of two or more variables. In this section we will explore how correlations can (and kind of cannot - see Chapter 9.2) provide insights into the following questions: Do movie watchers agree with critics regarding the rating of movies? Are newer movies more popular than older ones? Have movies become longer over the past years? There are many different ways of how one can compute the correlation and it partially depends on the type of data you want to relate. The ‘Pearson’s correlation’ is by far the most frequently used correlation technique for data that is normally distributed. On the other hand, if data is not normally distributed, we can opt for the ‘Spearman’s rank’ correlation. One could argue that the relationship between these two correlations is like the mean (Pearson) to the median (Spearman). Both approaches require numeric values to be computed properly. If our data is ordinal, or worse dichotomous (like a logical variables), we have to opt for different options. Table 9.1: Different ways of computing correlations Correlation Used Pearson Requires variables to be parametric and therefore numeric Spearman Used when data is non-parametric and requires numeric variables Polychoric Used when investigating two ordinal variables Tetrachoric Use when both variables are dichotomous, e.g. ‘yes/no,’ ‘True/False.’ There are many more variations of correlations, which you can explore on the website of the package we will use in this chapter: correlation. We will primarily focus on Pearson and Spearman as the most commonly used correlation types in academic publications to understand the relationship between two variables. In addition, we also look at ‘partial correlations,’ which allow us to introduce a third variable into this mix. 9.1 Plotting correlations Since correlations only show the relationship between two variables, we can easily put one variable onto the x axis and one variable onto the y axis using a point cloud. We already used the function before, i.e. geom_point() and geom_jitter. Let’s try to answer our first research question, i.e. whether regular movie watchers and critics (people who review movies as a profession) rate the top 250 in the same way. One assumption could be that it does not matter whether you are a regular movie watcher or someone who does it professionally. After all, we are just human beings. A counter thesis could be that critics have a different perspective on movies and might use different evaluation criteria. Either way, we first need to identify the two variables of interest: imdb_rating is based on IMDb users metascore is based on movie critics imdb_top_250 %&gt;% filter(!is.na(metascore)) %&gt;% ggplot(aes(imdb_rating, metascore)) + geom_jitter() The results are, well, surprising. Some movies with low imdb_ratings received very high metascores from the critics. Thus, we cannot see a clear relationship between user ratings and those of critics. The problematic question associated with this outcome is: Whom should I trust when renting the next movie? Since correlations only explain linear relationships, a perfect correlation would be represented by a straight line. Consider the following examples of correlations: set.seed(1234) # Positive correlation of 0.89 cm &lt;- tribble( ~a, ~b, 1, 0.9, 0.9, 1) means &lt;- c(2, 4) data &lt;- as_tibble(MASS::mvrnorm(n = 100, mu = means, Sigma = cm)) %&gt;% rename(&quot;x&quot; = `1`, &quot;y&quot; = `2`) p1 &lt;- data %&gt;% ggplot(aes(x, y)) + geom_point() + ggtitle(&quot;r = 0.89&quot;) + see::theme_modern() # Positive correlation of 0.30 cm &lt;- tribble( ~a, ~b, 1, 0.3, 0.3, 1 ) means &lt;- c(10, 4) data &lt;- as_tibble(MASS::mvrnorm(n = 100, mu = means, Sigma = cm)) %&gt;% rename(&quot;x&quot; = `1`, &quot;y&quot; = `2`) p2 &lt;- data %&gt;% ggplot(aes(x, y)) + geom_point() + ggtitle(&quot;r = 0.30&quot;) + see::theme_modern() # Negative correlation of -0.75 cm &lt;- tribble( ~a, ~b, 1, -0.8, -0.8, 1 ) means &lt;- c(10, 4) data &lt;- as_tibble(MASS::mvrnorm(n = 100, mu = means, Sigma = cm)) %&gt;% rename(&quot;x&quot; = `1`, &quot;y&quot; = `2`) p3 &lt;- data %&gt;% ggplot(aes(x, y)) + geom_point() + ggtitle(&quot;r = -0.75&quot;) + see::theme_modern() # Negative correlation of -0.42 cm &lt;- tribble( ~a, ~b, 1, -0.5, -0.5, 1 ) means &lt;- c(10, 4) data &lt;- as_tibble(MASS::mvrnorm(n = 100, mu = means, Sigma = cm)) %&gt;% rename(&quot;x&quot; = `1`, &quot;y&quot; = `2`) p4 &lt;- data %&gt;% ggplot(aes(x, y)) + geom_point() + ggtitle(&quot;r = -0.42&quot;) + see::theme_modern() p1 + p2 + p3 + p4 A correlation can be either positive or negative and its score (i.e. r) 9.2 Simpson’s Paradox: The limitations of correlations "]]
